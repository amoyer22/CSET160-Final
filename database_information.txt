-- Creating the database
CREATE DATABASE tests;
USE tests;


-- Creating the users table
CREATE TABLE users (
	id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(40) NOT NULL,
    password VARCHAR(40) NOT NULL,
    type ENUM('student', 'teacher') NOT NULL
);
-- Inserting example users into the database
INSERT INTO users (username, password, type)
VALUES ('student1', 'password123', 'student'), ('student2', 'newpassword', 'student'),
('teacher1', 'password456', 'teacher'), ('teacher2', 'newpassword', 'teacher');


-- Creating the users table
CREATE TABLE tests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    creator VARCHAR(255) NOT NULL
);
-- Inserting example tests into the database
INSERT INTO tests (name, creator)
VALUES ('Math Test', 'teacher1'), ('Unit Test', 'teacher2');


-- Creating the questions table
CREATE TABLE questions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    test_id INT NOT NULL,
    question_text TEXT NOT NULL,
    points INT NOT NULL,
    FOREIGN KEY (test_id) REFERENCES tests(id) ON DELETE CASCADE
);
-- Inserting example questions into the database
INSERT INTO questions (test_id, question_text, points)
VALUES (35, "5 + 2 = ?", 2), (35, "2 + 2 = ?", 2), (35, "3 + 6 = ?", 2), (35, "10 + 100 = ?", 2),
(36, "This is a question", 3), (36, "This is another question", 3), (36, "This is a question again", 3), (36, "This is a question worth less points", 1);


-- Creating the answers table
CREATE TABLE answers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    test_id INT NOT NULL,
    question_id INT NOT NULL,
    student_id INT NOT NULL,
    answer_text TEXT NOT NULL,
    grade INT DEFAULT NULL,
    graded_by VARCHAR(255),
    FOREIGN KEY (test_id) REFERENCES tests(id) ON DELETE CASCADE,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE,
    FOREIGN KEY (student_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Creating the test attempts table
CREATE TABLE test_attempts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    test_id INT NOT NULL,
    student_id INT NOT NULL,
    FOREIGN KEY (test_id) REFERENCES tests(id) ON DELETE CASCADE,
    FOREIGN KEY (student_id) REFERENCES users(id) ON DELETE CASCADE
);